
-injars       ./dist/OOBDesk.jar
-injars       ./dist/lib/Base.jar
-injars       ./dist/lib/PGPclasses.jar
-outjars      ./dist/OOBDesk_Rxxx_Branded.jar
#-outjars      /media/ram/test/
-libraryjars  <java.home>/lib/rt.jar
-libraryjars  ./dist/lib/(!org/spongycastle/**,!org/apache/commons/**,!org/oobd/**,!org/json/**)
#-libraryjars  ./dist/lib/
-printmapping myapplication.map

#-dontobfuscate
#-optimizationpasses 3
#-dontusemixedcaseclassnames
#-dontskipnonpubliclibraryclasses
#-dontpreverify
-verbose
#-dontoptimize
#-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*
-verbose
#-dontshrink


#-dontwarn org.spongycastle.**
-dontwarn javax.crypto.**


-keepnames public class ** extends org.oobd.base.OobdPlugin
-keepclasseswithmembernames public class ** extends org.oobd.base.OobdPlugin { 
    *; 
    public static <methods>;
}

-keepnames public class ** extends org.oobd.base.scriptengine.OobdScriptengine
-keepclasseswithmembernames public class ** extends org.oobd.base.scriptengine.OobdScriptengine { 
    *; 
    public static <methods>;
}
-keep class org.oobd.base.scriptengine.ScriptengineLua** { 
    *; 
    public static <methods>;
}


-keepnames public class ** extends org.oobd.base.uihandler.OobdUIHandler
-keepclasseswithmembernames public class ** extends org.oobd.base.uihandler.OobdUIHandler { 
    *; 
    public static <methods>;
}
-keep class org.oobd.ui.uihandler.UIHandler { 
    *; 
    public static <methods>;
}



-printusage deadcode.lst

#################  ATTENTION !! ####################################
# 
# after a looong time I found that the output of the 
#
#      -printusage deadcode.lst
#
# tells, which class members has been (wrongly) deleted by the optimazations
#
# by manually adding these classes and members to the keep list,
#
# the program started at least to function...
###################################################


-keep public class  org.oobd.ui.swing.desk.swing {
    	public static void main(java.lang.String[]);
	public static org.oobd.ui.swing.desk.swing getApplication();
}



-keep public class org.oobd.ui.swing.desk.TextVisualizerJPanel {
	public static org.oobd.base.visualizer.IFvisualizer getInstance(org.oobd.base.support.Onion);
}



-keep public class org.oobd.ui.swing.desk.swingAboutBox {
	private javax.swing.JButton closeButton;
	public swingAboutBox(java.awt.Frame);
	public void closeAboutBox();
	private void initComponents();
}


-keep public class org.oobd.ui.swing.desk.swingView {
    static final java.lang.String MAINPANEL;
    static final java.lang.String DIAGNOSEPANEL;
    static final java.lang.String SETTINGSPANEL;
    private javax.swing.JDialog aboutBox;
    public void showAboutBox();
    public void onClickButton_Back();
    public void onClickButton_Start();
    public void onClickButton_BackSettings();
    public void onClickMenu_Settings();
    public void onClickButton_Update();

}



-keep public interface org.oobd.base.OobdPlugin
-keep public class * implements org.oobd.base.OobdPlugin


-keepclasseswithmembernames  class * implements org.oobd.base.OobdPlugin { 
    *; 
}


-keep public interface org.oobd.base.scriptengine.OobdScriptengine
-keep public class * implements org.oobd.base.scriptengine.OobdScriptengine
-keep class * implements org.oobd.base.scriptengine.OobdScriptengine { 
	public static java.lang.String publicName();
}


-keep public interface org.oobd.base.uihandler.OobdUIHandler
-keep public class * implements org.oobd.base.uihandler.OobdUIHandler
-keep class * implements org.oobd.base.uihandler.OobdUIHandler { 
	public static java.lang.String publicName();
}


########### ACHTUNG !!! ####################

-keepnames  class org.oobd.ui.android.VizTable
-keepclasseswithmembernames  class org.oobd.ui.android.VizTable { 
    *; 
}


# this "sample" of how to obfucate a Swing app, was taken from http://forums.netbeans.org/post-8616.html

-renamesourcefileattribute SourceFile 
-keepattributes SourceFile,LineNumberTable 


-dontskipnonpubliclibraryclasses 

-dontskipnonpubliclibraryclassmembers 

-keep class * extends javax.swing.plaf.ComponentUI { 
    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent); 
} 


# Preserve all public applications. 

-keepclasseswithmembers public class * { 
    public static void main(java.lang.String[]); 
} 

# Print out a list of what we're preserving. 

-printseeds 

# Preserve all annotations. 

-keepattributes *Annotation* 

# Preserve all native method names and the names of their classes. 

-keepclasseswithmembernames class * { 
    native <methods>; 
} 

# Preserve the special static methods that are required in all enumeration 
# classes. 

-keepclassmembers class * extends java.lang.Enum { 
    public static **[] values(); 
    public static ** valueOf(java.lang.String); 
} 

# Explicitly preserve all serialization members. The Serializable interface 
# is only a marker interface, so it wouldn't save them. 
# You can comment this out if your application doesn't use serialization. 
# If your code contains serializable classes that have to be backward 
# compatible, please refer to the manual. 

-keepclassmembers class * implements java.io.Serializable { 
    static final long serialVersionUID; 
    static final java.io.ObjectStreamField[] serialPersistentFields; 
    private void writeObject(java.io.ObjectOutputStream); 
    private void readObject(java.io.ObjectInputStream); 
    java.lang.Object writeReplace(); 
    java.lang.Object readResolve(); 
} 

# Your application may contain more items that need to be preserved; 
# typically classes that are dynamically created using Class.forName: 

# -keep public class mypackage.MyClass 
# -keep public interface mypackage.MyInterface 
# -keep public class * implements mypackage.MyInterface 

# Preserve all public applications. 

-keepclasseswithmembers public class * { 
    public static void main(java.lang.String[]); 
} 

# Print out a list of what we're preserving. 

-printseeds 

# Preserve all annotations. 

-keepattributes *Annotation* 

# Preserve all native method names and the names of their classes. 

-keepclasseswithmembernames class * { 
    native <methods>; 
} 

# Preserve the special static methods that are required in all enumeration 
# classes. 

-keepclassmembers class * extends java.lang.Enum { 
    public static **[] values(); 
    public static ** valueOf(java.lang.String); 
} 

# Explicitly preserve all serialization members. The Serializable interface 
# is only a marker interface, so it wouldn't save them. 
# You can comment this out if your application doesn't use serialization. 
# If your code contains serializable classes that have to be backward 
# compatible, please refer to the manual. 

-keepclassmembers class * implements java.io.Serializable { 
    static final long serialVersionUID; 
    static final java.io.ObjectStreamField[] serialPersistentFields; 
    private void writeObject(java.io.ObjectOutputStream); 
    private void readObject(java.io.ObjectInputStream); 
    java.lang.Object writeReplace(); 
    java.lang.Object readResolve(); 
} 


